# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Grant GITHUB_TOKEN the permissions required to make a Pages deployment
permissions:
  contents: read
  id-token: write
  pages: write

concurrency:
  group: "gh-pages"
  cancel-in-progress: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: GitHub checkout repository
        uses: actions/checkout@v3
        
      # Runs a set of commands using the runners shell
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi
        
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Write Privates Secrets variables
        run: |
          pwd
          ls .
          echo "- let userEmailAddress = " ${{ secrets._AUTHOR_EMAIL }} >> ./sources/imports/private.pug
          echo "- let smartphoneNumber = " ${{ secrets._USER_PHONE }} >> ./sources/imports/private.pug
          echo "- let userSlugAtGitHub = " ${{ vars._GITHUB_AUTHOR }} >> ./sources/imports/private.pug
          echo "- let userSLugAtLinkedIn = " ${{ secrets._LINKEDIN_ACCOUNT }} >> ./sources/imports/private.pug
          echo "- let curriculumVitaeLocation = " ${{ secrets._CV_URL }} >> ./sources/imports/private.pug

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with sources
        run: ${{ steps.detect-package-manager.outputs.runner }} start
  
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          name: ${{ vars.gh-page-artifact-name }}
          path: './public'

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

  deploy:
    # Add a dependency to the build job
    needs: build

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
